@page "/transactionrecordcom"
<h3>交易记录</h3>
股票 
<select @onchange="filterRecords">
    @if (stocks != null)
    {
        @foreach (var curStock in stocks)
        {
            <option value="@curStock.StockId">@curStock.CodeNum+@curStock.Name</option>
        }

    }
</select>当前ID @tmpID

@if (curRecords != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>名称</th>
                <th>价格</th>
                <th>时间</th>
                <th>买入</th>
                <th>极值</th>
                <th>描述</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transactionRecord in curRecords)
            {
                <tr>
                    <td>@stockName</td>
                    <td>@transactionRecord.DealPrice</td>
                    <td>@transactionRecord.DealTime.Day</td>
                    <td>@transactionRecord.TradeType</td>
                    <td>@transactionRecord.TreeDayMax</td>
                    <td>@transactionRecord.Description</td>
                    <td></td>
                </tr>
            }
        </tbody>
        <tfoot>
               <tr>
                    <td><input type="text" @bind = "newTransactionRecord.StockID" /></td>
                    <td><input type="text" @bind = "newTransactionRecord.DealPrice" /></td>
                    <td><input type="text" @bind = "newTransactionRecord.DealTime" readonly="readonly" /></td>
                    <td><input type="checkbox" @bind = "newTransactionRecord.TradeType" /></td>
                    <td><input type="text" @bind = "newTransactionRecord.TreeDayMax" /></td>
                    <td><input type="text" @bind = "newTransactionRecord.Description" /></td>
                    <td><button class="btn btn-primary" @onclick="addTransactionRecord">添加</button>
                    </td>
                </tr>
        </tfoot>
    </table>
    }


@code {
    private ICollection<FrontWeb.Stock>? stocks;
    private ICollection<FrontWeb.TransactionRecord>? transactionRecords;
    private List<FrontWeb.TransactionRecord>? curRecords;

    private int tmpID = 0;
    private string? stockName;
    private FrontWeb.TransactionRecord newTransactionRecord = new TransactionRecord();
    protected override async Task OnInitializedAsync()
    {
        var httpclient = new HttpClient();
        var swaggerC = new swaggerClient("https://localhost:7270",httpclient);
        stocks = await swaggerC.StocksAllAsync();
        transactionRecords = await swaggerC.TransactionRecordsAllAsync();

        if(newTransactionRecord !=null)
        {
            newTransactionRecord.DealTime = DateTime.Now;
        }
    }

    private void  filterRecords(ChangeEventArgs e)
    {
        if(e!=null)
        {
            if (e.Value != null)
            {
                tmpID = Convert.ToInt32(e.Value.ToString());
                foreach( var curStock in stocks)
                {
                    if(curStock.StockId == tmpID)
                    {
                        stockName = curStock.Name + "-" + curStock.CodeNum;
                    }
                }


                List<FrontWeb.TransactionRecord> tmpT = transactionRecords.Where(t => t.StockID == tmpID).ToList();
                curRecords = tmpT.OrderByDescending(s => s.DealTime).ToList();

                newTransactionRecord.StockID = tmpID;

            }
        }
    }
    private void addTransactionRecord()
    {
        if(newTransactionRecord ==null)
        {
            return;
        }
        if (newTransactionRecord.DealPrice>0)
        {
            var httpclient = new HttpClient();
            var swaggerC = new swaggerClient("https://localhost:7270", httpclient);

            swaggerC.TransactionRecordsAsync(newTransactionRecord);

            if (newTransactionRecord != null)
            {
                curRecords.Add(newTransactionRecord);
                transactionRecords.Add(newTransactionRecord);
            }
        }

    }
    

}
